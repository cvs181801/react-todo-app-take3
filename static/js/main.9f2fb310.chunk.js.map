{"version":3,"sources":["components/Todolist.js","components/Todoitem.js","App.js","index.js"],"names":["Todolist","id","task","requiresConcentration","howOften","affirmation","emoji","completed","Todoitem","props","console","log","document","querySelector","className","type","onChange","handleChange","style","textDecoration","complete","celebrateComplete","App","state","todos","bind","this","setState","prevState","updatedTodos","map","todo","undefined","length","item","React","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9f2fb310.chunk.js","sourcesContent":["const Todolist = [\n    {\n        id: 1,\n        task: 'wash dishes',\n        requiresConcentration: false,\n        howOften: 'daily',\n        affirmation: 'good work!',\n        emoji: 'üêö',\n        completed: false\n    },\n    {\n        id: 2,\n        task: 'study React',\n        requiresConcentration: true,\n        howOften: 'daily',\n        affirmation: \"don't give up\",\n        emoji: 'üåû',\n        completed: false\n    },\n    {\n    \n        id: 3,\n        task: 'practice yoga',\n        requiresConcentration: true,\n        howOften: 'weekly',\n        affirmation: 'I rock',\n        emoji: 'üíê',\n        completed: false\n    },\n    {\n    \n        id: 4,\n        task: 'do laundry',\n        requiresConcentration: false,\n        howOften: 'weekly',\n        affirmation: 'excellent',\n        emoji: 'üéã',\n        completed: false\n    },\n    {\n        id: 5,\n        task: 'check mail',\n        requiresConcentration: false,\n        howOften: 'daily',\n        affirmation: 'way to adult',\n        emoji: 'üå¥',\n        completed: false\n    },\n    {\n        id: 6,\n        task: 'build my website',\n        requiresConcentration: true,\n        howOften: 'as needed',\n        affirmation: 'awesome',\n        emoji: \"ü¶ö\",\n        completed: false\n    },\n    {\n    \n        id: 7,\n        task: 'water the plants',\n        requiresConcentration: false,\n        howOften: 'monthly',\n        affirmation: 'celebrate the small things',\n        emoji: \"üßñüèº‚Äç‚ôÄÔ∏è\",\n        completed: false\n    },\n    {\n    \n        id: 8,\n        task: 'pay mortgage',\n        requiresConcentration: false,\n        howOften: 'monthly',\n        affirmation: 'rock on!',\n        emoji: 'üçâ',\n        completed: false\n    },\n    {\n        id: 9,\n        task: 'check email',\n        requiresConcentration: false,\n        howOften: 'daily',\n        affirmation: 'mission accomplished',\n        emoji: 'üìó',\n        completed: false\n    },\n    {\n        id: 10,\n        task: 'do lower back exercises',\n        requiresConcentration: false,\n        howOften: 'daily',\n        affirmation: 'self care pays off',\n        emoji: 'üèÖ',\n        completed: false\n    }\n    \n    ]\n    \n    export default Todolist;","import React from 'react'\n//import './index.css'\n\nfunction Todoitem(props) {\n\n    console.log(\"complete? \", props.completed)\nconst affirmationDiv = document.querySelector(\".todoitem__affirm\");\n\nconst completedStyle = {\n    textDecoration: \"line-through\"\n}\n\nfunction celebrateComplete(complete, affirmation) {\n    if (complete) {\n        console.log(affirmation)\n        return <p>{affirmation}</p>\n    } //else {\n        //affirmationDiv.classList.add(\"hidden\");\n    //}\n}\n    return (\n        <div className=\"todoitem\"> \n            <div className=\"todoitem__checkbox\">\n                <input type=\"checkbox\" \n                    onChange={()=> props.handleChange(props.id)}></input>\n                </div>   \n            <p style={props.completed ? completedStyle : null}>{props.task}</p>     \n            <div className=\"todoitem__affirm\">{celebrateComplete(props.completed, props.affirmation)}{props.emoji}</div>    \n        </div>\n    ) \n}\n\nexport default Todoitem\n\n","import React from \"react\"\nimport Todolist from \"./components/Todolist\"\nimport Todoitem from \"./components/Todoitem\"\nimport './index.css';\n\nclass App extends React.Component {\nconstructor() {\n  super()\n  this.state = {\n    todos: Todolist\n  }\n  this.handleChange = this.handleChange.bind(this)\n  \n}\n\nhandleChange(id) {\n  this.setState(prevState => {\n    const updatedTodos = prevState.todos.map(todo => {\n      if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed\n          }    \n        } else {\n          return todo;\n        }\n      })\n    console.log(\"prevState.todos: \", prevState.todos);  \n    console.log(\"updated todos: \", updatedTodos);\n    return {\n      todos: updatedTodos\n    }\n  })\n}\n\n\nrender() {\n    return (\n      <div className=\"App\">\n          <h1>To Do's</h1>    \n          <hr className=\"underline\"></hr>\n        {(this.state.todos !== undefined && this.state.todos.length > 0) && (this.state.todos.map(item => <Todoitem key={item.id} id={item.id} task={item.task} \n          requiresConcentration={item.requiresConcentration} howOften={item.howOften} affirmation={item.affirmation}\n          completed={item.completed} emoji={item.emoji} handleChange={this.handleChange} />)) }\n    </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}